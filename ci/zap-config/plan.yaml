env:
  host: https://app.cloud.gov

contexts:
  - name: internal
    includePaths:
      - "^/.*"
    authentication:
      method: script
      parameters:
        scriptName: uaa-oauth2.js
        tokenUrl: ${INTERNAL_TOKEN_URI}
        clientId: ${INTERNAL_CLIENT_ID}
        clientSecret: ${INTERNAL_CLIENT_SECRET}

  - name: external
    includePaths:
      - "^/.*"
    # no auth

  - name: pages
    includePaths:
      - "^/.*"
    authentication:
      method: form
      parameters:
        loginPageUrl: https://auth.cloud.gov/login
        loginRequestUrl: https://auth.cloud.gov/token
        loginRequestBody: "username=${PAGES_USER}&password=${PAGES_PASS}"

  - name: unauthenticated
    includePaths:
      - "^/.*"
    # no auth

jobs:
  - name: import-urls-internal
    type: import
    context: internal
    parameters:
      type: url
      fileName: ci/zap-config/urls_internal.txt

  - name: import-urls-external
    type: import
    context: external
    parameters:
      type: url
      fileName: ci/zap-config/urls_external.txt

  - name: import-urls-pages
    type: import
    context: pages
    parameters:
      type: url
      fileName: ci/zap-config/urls_pages.txt

  - name: import-urls-unauthenticated
    type: import
    context: unauthenticated
    parameters:
      type: url
      fileName: ci/zap-config/urls_unauthenticated.txt

  - name: spider
    type: spider
    context: "${context}"

  - name: passive-config
    type: passiveScan-config
    parameters:
      maxAlertsPerRule: 5
      scanOnlyInScope: true

  - name: passive-wait
    type: passiveScan-wait
    parameters:
      maxDuration: 60

  - name: active
    type: activeScan
    context: "${context}"
    parameters:
      policy: "Default Policy"
      maxScanDurationInMins: 15

  - name: fuzz-params
    type: fuzz
    context: "${context}"
    parameters:
      locations:
        - url: "${host}/${context}/api" # adjust per context
        - parameter: "id"

  - name: sequence-test
    type: sequence-activeScan
    context: "${context}"

report:
  - type: html
    output: "zap-report/${context}.html"

  - type: sarif-json
    output: "zap-report/${context}.sarif.json"

  - type: exitStatus
    parameters:
      warnLevel: MEDIUM
      errorLevel: HIGH
