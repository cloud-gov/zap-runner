# ci/tasks/zap-scan.yml
---
platform: linux

image_resource:
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: ((repo_name))
    aws_region: us-gov-west-1
    tag: ((runner_tag))

inputs:
  - name: ((repo_name))

outputs:
  - name: zap-report

params:
  SCAN_MODE:
  CREDHB_CRED:

run:
  path: bash
  args:
    - -ceu
    - |
      echo "Starting scan in mode: $SCAN_MODE"
      CONTEXT_FILE="((repo_name))/ci/contexts/${SCAN_MODE}.context"
      if [[ ! -f "$CONTEXT_FILE" ]]; then
        echo "ERROR: context file not found: $CONTEXT_FILE" >&2
        exit 1
      fi

      # extract first <incregexes> URL as the quick-start URL
      QUICK_URL=$(grep -m1 '<incregexes>' "$CONTEXT_FILE" \
                  | sed -E 's/.*>([^<]+)<.*/\1/')
      echo "Using quick URL: $QUICK_URL"

      auth_header=""
      if [[ "$SCAN_MODE" != "unauthenticated" ]]; then
        client_id=$(jq -r .client_id <<<"$CREDHB_CRED")
        client_secret=$(jq -r .client_secret <<<"$CREDHB_CRED")
        token_uri=$(jq -r .token_uri <<<"$CREDHB_CRED")
        token=$(curl -s -u "$client_id:$client_secret" \
                -d 'grant_type=client_credentials' \
                "$token_uri" | jq -r .access_token)
        auth_header="-authheader \"Authorization: Bearer $token\""
      fi

      mkdir -p zap-report
      zap.sh -cmd \
        -context "$CONTEXT_FILE" \
        -quickurl "$QUICK_URL" \
        $auth_header \
        -r zap-report/report-${SCAN_MODE}.html \
        -J zap-report/report-${SCAN_MODE}.json

      echo "Scan complete; reports in zap-report/"
