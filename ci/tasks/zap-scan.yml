platform: linux

image_resource:
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: ((repo_name))
    aws_region: us-gov-west-1
    tag: ((runner_tag))

inputs:
  - name: ((repo_name))

outputs:
  - name: zap-report
    path: /zap/wrk

params:
  TARGET_CONTEXT: # one of internal, external, pages, unauthenticated
  CREDHB_CRED: ((repo_name))/ci/config.yml

run:
  path: bash
  args:
    - -ceux
    - |
      #!/usr/bin/env bash

      echo "Starting DAST for context '${TARGET_CONTEXT}'"

      CREDS_JSON="$CREDHB_CRED"

      # Copy config file to expected directory
      mkdir -p /zap/wrk/zap-config && cp ((repo_name))/ci/zap-config/zap.yaml /zap/wrk/zap-config/zap.yaml

      # Filter URLs for this context
      mapfile -t URLS < <(
        tail -n +2 ((repo_name))/ci/zap-config/urls.csv | \
        awk -F',' -v ctx="$TARGET_CONTEXT" '$1==ctx { print $2 }'
      )

      if [ ${#URLS[@]} -eq 0 ]; then
        echo "No URLs for context '$TARGET_CONTEXT', skipping."
        exit 0
      fi

      # Extract credentials for this context (may be empty)
      CLIENT_ID=$(jq -r --arg ctx "$TARGET_CONTEXT" '.[$ctx].client_id // empty' <<<"$CREDS_JSON")
      CLIENT_SECRET=$(jq -r --arg ctx "$TARGET_CONTEXT" '.[$ctx].client_secret // empty' <<<"$CREDS_JSON")
      TOKEN_URI=$(jq -r --arg ctx "$TARGET_CONTEXT" '.[$ctx].token_uri // empty' <<<"$CREDS_JSON")

      for url in "${URLS[@]}"; do
        host=$(echo "$url" | sed -E 's#https?://##;s#/.*##')
        HTML_OUT="/zap/wrk/${TARGET_CONTEXT}-${host}.html"
        JSON_OUT="/zap/wrk/${TARGET_CONTEXT}-${host}.json"
        XML_OUT="/zap/wrk/${TARGET_CONTEXT}-${host}.xml"

        echo "â†’ Scanning $url"

        # Build auth args only if all credentials present
        AUTH_ARGS=()
        if [[ -n "$CLIENT_ID" && -n "$CLIENT_SECRET" && -n "$TOKEN_URI" ]]; then
          AUTH_ARGS+=( -t "${CLIENT_ID}:${CLIENT_SECRET}:${TOKEN_URI}" )
        else
          echo "Warning: missing credentials for context '$TARGET_CONTEXT'; proceeding without auth."
        fi

        /zap/zap-baseline.py \
          -t "$url" \
          -c zap-config/zap.yaml \
          -r "$HTML_OUT" \
          -J "$JSON_OUT" \
          -x "$XML_OUT" \
          "${AUTH_ARGS[@]}"

        echo "  Reports: $HTML_OUT, $JSON_OUT, $XML_OUT"
      done

      echo "Context '$TARGET_CONTEXT' scans complete."
